services:
  ## The Flask API service:
  ## If you change this name, change it in docker-compose.instance.yaml too:
  api:
    depends_on:
      database:
        condition: service_healthy
    ## Build the docker image from the local Dockerfile source:
    build:
      context: api
      args:
        UID: ${FLASK_TEMPLATE_UID}
        GID: ${FLASK_TEMPLATE_GID}
    ## user is optional, it overrides the USER of the Dockerfile
    user: ${FLASK_TEMPLATE_UID}:${FLASK_TEMPLATE_GID}
    environment:
      - PGHOST=database
      - PGPORT=5432
      - PGDATABASE=${FLASK_TEMPLATE_POSTGRES_DATABASE}
      - PGUSER=${FLASK_TEMPLATE_POSTGRES_USER}
      - PGPASSWORD=${FLASK_TEMPLATE_POSTGRES_PASSWORD}
      - DOCKER_PROJECT=
      - API_UPLOAD_FOLDER=${FLASK_TEMPLATE_API_UPLOAD_FOLDER}
    volumes:
      - uploads:${FLASK_TEMPLATE_API_UPLOAD_FOLDER}

  ## The PostgreSQL database service:
  ## If you change this name, change it in docker-compose.instance.yaml too:
  database:
    image: postgres:16
    environment:
      - POSTGRES_PASSWORD=${FLASK_TEMPLATE_POSTGRES_PASSWORD}
      - POSTGRES_USER=${FLASK_TEMPLATE_POSTGRES_USER}
      - POSTGRES_DB=${FLASK_TEMPLATE_POSTGRES_DATABASE}
    volumes:
      - database:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]

volumes:
  database:
  uploads:
